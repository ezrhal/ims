@using IMS.Shared.Models
@inject Radzen.DialogService dialog
@inject HttpClient httpClient
@inject NotificationService NotificationService

<RadzenTemplateForm Data="@item" Submit="@(async (ItemModel args) => { await SaveMaterial(args); })">
    <RadzenRow Gap="0.15rem">
        <RadzenColumn Size="12" SizeSM="12">
            <RadzenStack Orientation="Orientation.Vertical" Gap="0.5rem">

                <RadzenTextBox @bind-Value="@item.item" Name="item" Placeholder="Item" Class="rz-background-color-white" Style="display:block" />
                <RadzenRequiredValidator Component="item" Text="Item is required" Popup="true" Style="position:relative; top: -10px; width: fit-content" />

                <RadzenTextArea @bind-Value="@item.description" Rows="3" Class="rz-background-color-white" Placeholder="Description" />
                <RadzenDropDown Data=@units TextProperty="unit" ValueProperty="unit" TValue="string" @bind-Value="@item.unit" Class="rz-background-color-white" Placeholder="Unit" Name="unit" />
                <RadzenRequiredValidator Component="unit" Text="Unit is required" DefaultValue="0" Style="position:relative; top: -10px; width: fit-content" Popup="true" />

                <RadzenNumeric @bind-Value="@item.unitcost" Name="unitcost" Class="rz-background-color-white" Placeholder="Unitcost" />
                <RadzenNumericRangeValidator Component="unitcost" Min="1" Max="999999999999" Text="Unitcost should be greater than 0" Popup="true" Style="position:relative; top: -10px; width: fit-content" />

            </RadzenStack>
            <RadzenStack Orientation="Orientation.Horizontal" Class="mt-3" JustifyContent="JustifyContent.Right" Gap="0.5rem">
                <RadzenButton Text="Cancel" Click="@(() => CloseDialog())" ButtonStyle="ButtonStyle.Secondary" />
                <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="Save" ButtonStyle="ButtonStyle.Primary" Shade="Shade.Dark" />
            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>
</RadzenTemplateForm>
