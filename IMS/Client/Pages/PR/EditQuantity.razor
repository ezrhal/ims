
@using IMS.Shared.Models
@inject Radzen.DialogService dialog
@inject HttpClient httpClient
@inject NotificationService NotificationService


<RadzenTemplateForm Data="@prItem" Submit="@(async (PRItemModel args) => { await SaveQuantity(args); })">
    <RadzenRow Gap="0.15rem">
        <RadzenColumn Size="12" SizeSM="12">
            @{
                if (charges != "Admin")
                {
                    <RadzenStack Orientation="Orientation.Vertical" Gap="0.5rem">
                        <RadzenRow class="rz-text-align-center mb-1" Gap="0.5rem">
                            <RadzenColumn class="mt-2">
                                <RadzenText TextAlign="TextAlign.Right">&nbsp; Total Quantity :</RadzenText>
                            </RadzenColumn>
                            <RadzenColumn>
                                <div class="rz-textbox" style="width: 80px; text-align:left">
                                    @totalprocured.totalquantity
                                </div>
                            </RadzenColumn>
                        </RadzenRow>
                        <RadzenRow class="rz-text-align-center mb-1" Gap="0.5rem" RowGap="0.5rem">
                            <RadzenColumn class="mt-2">
                                <RadzenText TextAlign="TextAlign.Right">&nbsp; Total Procured :</RadzenText>
                            </RadzenColumn>
                            <RadzenColumn>
                                <div class="rz-textbox" style="width: 80px; text-align:left">
                                    @totalprocured.totalprocured
                                </div>
                            </RadzenColumn>
                        </RadzenRow>
                        <RadzenRow class="rz-text-align-center" Gap="0.5rem" RowGap="0.5rem">
                            <RadzenColumn class="mt-2">
                                <div style="color: @(remainingquantity < 1 ? "red" : "black"); text-align:right">
                                    &nbsp; @remainingtext :
                                </div>
                            </RadzenColumn>
                            <RadzenColumn>
                                <div class="rz-textbox" style="color: @(remainingquantity < 1 ? "red" : "black"); width: 80px; text-align:left">
                                    @remainingquantity
                                </div>
                            </RadzenColumn>
                        </RadzenRow>
                        <RadzenNumeric @bind-Value="@prItem.quantity" Name="quantity" Class="rz-background-color-white" Placeholder="Quantity"/>
                        <RadzenNumericRangeValidator Component="quantity" Min="1" Max="999999999999" Text="Quantity should be greater than 0" Popup="true" Style="position:relative; top: -10px; width: fit-content"/>
                    </RadzenStack>
                }
                else
                {
                    <RadzenStack Orientation="Orientation.Vertical" Gap="0.5rem">
                        <RadzenNumeric @bind-Value="@prItem.quantity" Name="quantity" Class="rz-background-color-white" Placeholder="Quantity"/>
                        <RadzenNumericRangeValidator Component="quantity" Min="1" Max="999999999999" Text="Quantity should be greater than 0" Popup="true" Style="position:relative; top: -10px; width: fit-content"/>
                    </RadzenStack>
                }
            }
            
            <RadzenStack Orientation="Orientation.Horizontal" Class="mt-3" JustifyContent="JustifyContent.Right" Gap="0.5rem">
                <RadzenButton Text="Cancel" Click="@(() => CloseDialog())" ButtonStyle="ButtonStyle.Secondary"/>
                <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="Save" ButtonStyle="ButtonStyle.Primary" Shade="Shade.Dark"/>
            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>
</RadzenTemplateForm>